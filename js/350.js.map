{"version":3,"sources":["webpack://sakurairo-scripts/./src/entries/sakura-app/AplayerInit.ts"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","aplayerInit","aplayer_1","fg_loadcss_1","aplayers","initAplayer","a","b","default_option","container","audio","mini","fixed","autoplay","mutex","lrcType","listFolded","preload","theme","loop","order","volume","listMaxHeight","customAudioType","storageName","length","lrc","d","key","key_lowercase","toLowerCase","dataset","hasOwnProperty","push","default","f","hide","console","log","lrcTag","document","querySelector","addEventListener","show","apSwitchTag","aplayer_body","aplayer_minisw","classList","add","remove","getElementById","loadCSS","meting_api_path","meting_api","URL","mashiro_option","meting_api_url","searchParams","set","Poi","nonce","destroy","collection","getElementsByClassName","e","element","id","api_path","api","params","server","type","fetch","toString","then","async","resp","ok","json","warn","status","statusText","catch","error","xhr","XMLHttpRequest","onreadystatechange","readyState","JSON","parse","responseText","open","send","url","playlist_info","name","title","artist","author","cover","pic","loadMeting"],"mappings":"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","file":"350.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.aplayerInit = void 0;\n//@ts-ignore\nconst aplayer_1 = __importDefault(require(\"aplayer\"));\nconst fg_loadcss_1 = require(\"fg-loadcss\");\nlet aplayers = [];\nfunction aplayerInit() {\n    //document.addEventListener('DOMContentLoaded', loadMeting, /* !1 *//**false与什么都不传递作用相等 */);\n    fg_loadcss_1.loadCSS(\"https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css\");\n    loadMeting();\n}\nexports.aplayerInit = aplayerInit;\nfunction initAplayer(a, b) {\n    const default_option = {\n        container: a,\n        audio: b,\n        mini: null,\n        fixed: null,\n        autoplay: !1,\n        mutex: !0,\n        lrcType: 3,\n        listFolded: 1,\n        preload: 'auto',\n        theme: '#2980b9',\n        loop: 'all',\n        order: 'list',\n        volume: null,\n        listMaxHeight: null,\n        customAudioType: null,\n        storageName: 'metingjs'\n    };\n    if (b.length) {\n        b[0].lrc || (default_option.lrcType = 0);\n        let d = {};\n        for (const key in default_option) {\n            let key_lowercase = key.toLowerCase();\n            if (a.dataset.hasOwnProperty(key_lowercase) || a.dataset.hasOwnProperty(key) || default_option[key] !== null) {\n                d[key] = a.dataset[key_lowercase] || a.dataset[key] || default_option[key];\n                if ('true' === d[key] || 'false' === d[key]) {\n                    d[key] = 'true' == d[key];\n                }\n            }\n        }\n        aplayers.push(new aplayer_1.default(d));\n    }\n    for (let f = 0; f < aplayers.length; f++)\n        try {\n            aplayers[f].lrc.hide();\n        }\n        catch (a) {\n            console.log(a);\n        }\n    let lrcTag = 1;\n    document.querySelector(\".aplayer.aplayer-fixed\").addEventListener(\"click\", () => {\n        if (lrcTag == 1) {\n            for (let f = 0; f < aplayers.length; f++)\n                try {\n                    aplayers[f].lrc.show();\n                }\n                catch (a) {\n                    console.log(a);\n                }\n        }\n        lrcTag = 2;\n    });\n    let apSwitchTag = 0, aplayer_body = document.querySelector(\".aplayer.aplayer-fixed .aplayer-body\"), aplayer_minisw = document.querySelector(\".aplayer-miniswitcher\");\n    aplayer_body && aplayer_body.classList.add(\"ap-hover\");\n    aplayer_minisw && aplayer_minisw.addEventListener(\"click\", () => {\n        if (apSwitchTag == 0) {\n            aplayer_body && aplayer_body.classList.remove(\"ap-hover\");\n            document.getElementById(\"secondary\") && document.getElementById(\"secondary\").classList.add(\"active\");\n            apSwitchTag = 1;\n        }\n        else {\n            aplayer_body && aplayer_body.classList.add(\"ap-hover\");\n            document.getElementById(\"secondary\") && document.getElementById(\"secondary\").classList.remove(\"active\");\n            apSwitchTag = 0;\n        }\n    });\n}\nfunction loadMeting() {\n    let meting_api_path;\n    if (typeof meting_api == 'string') {\n        meting_api_path = new URL(meting_api);\n    }\n    else {\n        meting_api_path = new URL(mashiro_option.meting_api_url);\n        meting_api_path.searchParams.set('_wpnonce', Poi.nonce);\n    }\n    for (let f = 0; f < aplayers.length; f++)\n        try {\n            aplayers[f].destroy();\n        }\n        catch (a) {\n            console.log(a);\n        }\n    aplayers = [];\n    let collection = document.getElementsByClassName('aplayer');\n    for (let e = 0; e < collection.length; e++) {\n        let element = collection[e], id = element.dataset.id;\n        if (id) {\n            const api_path = element.dataset.api ? new URL(element.dataset.api) : meting_api_path;\n            const params = api_path.searchParams;\n            params.set('server', element.dataset.server);\n            params.set('type', element.dataset.type);\n            params.set('id', element.dataset.id);\n            if (fetch) {\n                fetch(api_path.toString())\n                    .then(async (resp) => {\n                    if (resp.ok) {\n                        initAplayer(element, await resp.json());\n                    }\n                    else {\n                        console.warn(`(APlayer) HTTP ${resp.status}:${resp.statusText}`);\n                    }\n                }).catch(console.error);\n            }\n            else {\n                const xhr = new XMLHttpRequest;\n                xhr.onreadystatechange = function () {\n                    if (4 === xhr.readyState && (200 <= xhr.status && 300 > xhr.status || 304 === xhr.status)) {\n                        const b = JSON.parse(xhr.responseText);\n                        initAplayer(element, b);\n                    }\n                },\n                    xhr.open('get', api_path.toString(), !0);\n                xhr.send();\n            }\n        }\n        else if (element.dataset.url) {\n            const playlist_info = [{\n                    name: element.dataset.name || element.dataset.title || 'Audio name',\n                    artist: element.dataset.artist || element.dataset.author || 'Audio artist',\n                    url: element.dataset.url,\n                    cover: element.dataset.cover || element.dataset.pic,\n                    lrc: element.dataset.lrc,\n                    type: element.dataset.type || 'auto'\n                }];\n            initAplayer(element, playlist_info);\n        }\n    }\n}\n;\n"],"sourceRoot":""}